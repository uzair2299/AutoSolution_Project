@model AutoSolution.Services.ViewModel.VehicleEngineTypeViewModel

<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
    <div class="kt-portlet kt-portlet--mobile">
        <div class="kt-portlet__head kt-portlet__head--lg">
            <div class="kt-portlet__head-label">
                <span class="kt-portlet__head-icon">
                    <i class="fa fa-car-alt"></i>
                </span>
                <h3 class="kt-portlet__head-title">
                    Add New Vehicle Engine Type
                </h3>
            </div>
        </div>
        <div class="kt-portlet__body">
            <form class="kt-form kt-form--fit kt-margin-b-20" id="AddNewVehicleEngineType">
                @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-lg-6 col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EngineTypeName, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-car-alt"></i></span></div>
                                @Html.EditorFor(model => model.EngineTypeName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    @*<div class="col-lg-6 col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ShortCode, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-car-alt"></i></span></div>
                                @Html.EditorFor(model => model.ShortCode, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>*@
                </div>
                @*<div class=" row">
                    <div class="col-lg-12 col-xl-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">

                                @Html.TextAreaFor(model => model.Description, 5, 100, new { @class = "form-control", style = "width:100%;" })

                            </div>
                        </div>
                    </div>
                </div>*@
                <div class="kt-separator kt-separator--md kt-separator--dashed"></div>
                <div class="row">
                    <div class="col-lg-12">
                        <button class="btn btn-dark btn-brand--icon pageButtons" id="kt_search" type="button">
                            <span>
                                <i class="la la-plus"></i>
                                <span>Add New</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button class="btn btn-secondary btn-secondary--icon" id="kt_reset" type="reset">
                            <span>
                                <i class="la la-close"></i>
                                <span>Cancel</span>
                            </span>
                        </button>
                    </div>
                </div>
            </form>
            <!--begin: Datatable -->
            <!--end: Datatable -->
        </div>
    </div>
</div>

<script>
    var rendered = false;
    //debugger;
    $("#kt_search").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddNew", "VehicleEngineType")',
                data: $("#AddNewVehicleEngineType").serialize()
            })
                .done(function (response) {
                    $('#tableContiner').html(response);
                    Swal.fire({
                        text: 'Successfully Added',
                    })
                    rendered = true;
                    //debugger;
                })

                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FAIL");
                });
            debugger;
                $('#AddNewContainer').html("");
            rendered = false;
            //debugger;

 });

</script>

