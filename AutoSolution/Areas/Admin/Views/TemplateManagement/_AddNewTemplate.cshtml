@model AutoSolution.Services.ViewModel.JsonModel
<div class="kt-container  kt-container--fluid  kt-grid__item kt-grid__item--fluid">
    <div class="kt-portlet kt-portlet--mobile">
        <div class="kt-portlet__head kt-portlet__head--lg">
            <div class="kt-portlet__head-label">
                <span class="kt-portlet__head-icon">
                    <i class="fa fa-columns"></i>
                </span>
                <h3 class="kt-portlet__head-title">
                    Add New  Template
                </h3>
            </div>
        </div>
        <div class="kt-portlet__body">
            <form class="kt-form kt-form--fit kt-margin-b-20" id="AddNewTemplate">
                
                <div class="row">
                    <div class="col-lg-6 col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TemplateTitle, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-file-invoice"></i></span></div>
                                @Html.EditorFor(model => model.TemplateTitle, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6 col-xl-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TemplateShortCode, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-file-invoice"></i></span></div>
                                @Html.EditorFor(model => model.TemplateShortCode, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12 col-xl-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TemplateBody, htmlAttributes: new { @class = "col-form-label" })
                            <div class="input-group">
                                
                                @Html.TextAreaFor(model => model.TemplateBody, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="kt-separator kt-separator--md kt-separator--dashed"></div>
                <div class="row">
                    <div class="col-lg-12">
                        <button class="btn btn-dark btn-brand--icon pageButtons" id="kt_search" type="button">
                            <span>
                                <i class="la la-plus"></i>
                                <span>Add New</span>
                            </span>
                        </button>
                        &nbsp;&nbsp;
                        <button class="btn btn-secondary btn-secondary--icon" id="kt_reset" type="reset">
                            <span>
                                <i class="la la-close"></i>
                                <span>Cancel</span>
                            </span>
                        </button>
                    </div>
                </div>
            </form>
            <!--begin: Datatable -->
            <!--end: Datatable -->
        </div>
    </div>
</div>

<script>


    $(document).ready(function () {
        $('#TemplateBody').summernote({
            placeholder: 'Type Here',
            width: 1000,
            height: 400
        });
    });
       var rendered = false;
    //debugger;
    $("#kt_search").click(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("AddNew", "TemplateManagement")',
                data: {
                    TemplateShortCode: $("#TemplateShortCode").val(),
                    TemplateTitle: $("#TemplateTitle").val(),
                    TemplateBody: $('#TemplateBody').summernote('code')
                }
            })
                .done(function (response) {
                    $('#tableContiner').html(response);
                    Swal.fire({
                        text: 'Successfully Added',
                    })
                    rendered = true;
                    //debugger;
                })

                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("FAIL");
                });
            debugger;
                $('#AddNewContainer').html("");
            rendered = false;
            //debugger;

 });


    // var rendered = false;
    //debugger;
    //$("#kt_search").click(function () {
    //    debugger
        //var Pst = {
            //TemplateShortCode: $("#TemplateShortCode").val(),
            //TemplateTitle: $("#TemplateTitle").val(),
            //TemplateBody: $('#TemplateBody').summernote('code')
        //}
        @*$.ajax({

            type: 'POST',
            dataType: 'json',
            contentType: 'application /json;charset=utf-8',
            data: {
                TemplateShortCode: $("#TemplateShortCode").val(),
                TemplateTitle: $("#TemplateTitle").val(),
            },
            url: '@Url.Action("AddNew", "TemplateManagement")',

            })
            .done(function (response) {
                debugger
                    $('#tableContiner').html(response);
                    Swal.fire({
                        text: 'Successfully Added',
                    })
                    rendered = true;
                    //debugger;
                })

            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                debugger
                    alert("FAIL");
                });
            debugger;
            //    $('#AddNewContainer').html("");
            //rendered = false;
            //debugger;

 });*@


    //$(document).ready(function () {
    //    $('#TemplateBody').summernote({
    //        placeholder: 'Type Here',
    //        width: 1000,
    //        height:400
    //    });
    //});
    @*var rendered = false;
    //debugger;
    $("#kt_search").click(function () {
        debugger
        var Post = {
            TemplateShortCode: $("#TemplateShortCode").val(),
            TemplateTitle: $("#TemplateTitle").val(),
           // TemplateBody: $('#TemplateBody').summernote('code')
        }
        $.ajax({
            dataType: "JSON",
            url: '@Url.Action("AddNew", "TemplateManagement")',
            data: JSON.stringify(Post), /*$("#AddNewPartsProductsManu").serialize(),*/
            type: "POST",
            ContentType: "application /json;charset=utf-8",
            success: function (response) {
                if (response.Success) {
                }
                else {
                }
            },
            error: function (xhr, status) {
            }
            })
                //.done(function (response) {
                //    $('#tableContiner').html(response);
                //    Swal.fire({
                //        text: 'Successfully Added',
                //    })
                //    rendered = true;
                //    //debugger;
                //})

                //.fail(function (XMLHttpRequest, textStatus, errorThrown) {
                //    alert("FAIL");
                //});
            debugger;
                $('#AddNewContainer').html("");
            rendered = false;
            //debugger;

 });*@
</script>




